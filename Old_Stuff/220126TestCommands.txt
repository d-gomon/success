cgr_control_limit(time = 500, alpha = 0.1, cbaseh = function(t) chaz_exp(t, lambda = 0.02), psi = 0.5, n_sim = 10)
b <- cgr_control_limit(time = 500, alpha = 0.1, coxphmod = tcoxmod, psi = 0.5, n_sim = 10, data = subset(surgerydat, hosp_num == 1) )

a <- cgr_control_limit(time = 500, alpha = 0.1, inv_cbaseh = function(t) inv_chaz_exp(t, lambda = 0.02), psi = 0.5, n_sim = 10)

b <- cgr_control_limit(time = 500, alpha = 0.1, coxphmod = tcoxmod, psi = 0.5, n_sim = 5, data = subset(surgerydat, hosp_num == 1) )
b2 <- cgr_control_limit(time = 500, alpha = 0.1, coxphmod = tcoxmod, psi = 0.5, n_sim = 5)

c <- cgr_control_limit(time = 500, alpha = 0.1, cbaseh = function(t) chaz_exp(t, lambda = 0.02), psi = 0.5, n_sim = 10)

gen_surv_times(invchaz = invcbaseh(t), )

calc_risk(data = df_temp, coxphmod = coxphmod)

predict(object = coxphmod, type = "risk", reference = "zero")

hist(replicate(300,gen_surv_times(invchaz = function(t) inv_chaz_exp(t, lambda = 0.02), data = 1)))


Censor all observations which cannot be generated!!!! We know that these people would survive past this point, but not when exactly they would fail.


fuck loess, let's predict using the available times:
write function: input coxphmod
Determines basehaz
At time t, return value smaller than at time t.


Doe algoritme wat middle search doet voor optimale h
Kan je doen door typ1error(h) - alpha te solven met uniroot



